name: Build and deploy Gimnazija app

on:
  push:
    branches:
      - main
    # paths:
    #   - 'web/**/**.ts'
    #   - 'web/package.json'
    #   - '!web/README.md'
    #   - 'dashboard/**/**.ts'
    #   - 'dashboard/package.json'
    #   - '!dashboard/README.md'

jobs:
  build-and-push-web:
    runs-on: ubuntu-latest
    steps:
      - name: prepare for build
        uses: ./.github/actions/prepare_docker_build

      - name: build and push docker image
        uses: docker/build-push-action@v6
        with:
          push: true
          file: web/Dockerfile
          target: production
          platforms: linux/amd64
          context: .
          tags: |
            ghcr.io/kapobajza/gimnazija_web:prod
            ghcr.io/kapobajza/gimnazija_web:${{ github.sha }}
  
  build-and-push-dashboard:
    runs-on: ubuntu-latest
    steps:
      - name: prepare for build
        uses: ./.github/actions/prepare_docker_build

      - name: build and push docker image
        uses: docker/build-push-action@v6
        with:
          push: true
          file: dashboard/Dockerfile
          target: production
          platforms: linux/amd64
          context: .
          tags: |
            ghcr.io/kapobajza/gimnazija_api:prod
            ghcr.io/kapobajza/gimnazija_api:${{ github.sha }}}

  deploy:
    runs-on: ubuntu-latest
    needs: [build-and-push-web, build-and-push-dashboard]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create env file
        run: |
          echo "GIT_COMMIT_HASH=${{ github.sha }}" >> ./envfile
          echo "DATABASE_USERNAME=${{ secrets.DATABASE_USERNAME }}" >> ./envfile
          echo "DATABASE_NAME=${{ secrets.DATABASE_NAME }}" >> ./envfile

      - name: Docker Stack Deploy
        uses: cssnr/stack-deploy-action@v1
        with:
          name: gimnazija
          file: docker-stack.yaml
          host: ${{ secrets.VPS_HOST }}
          user: deploy
          ssh_key: ${{ secrets.DEPLOY_SSH_PRIVATE_KEY }}
          env_file: ./envfile